services:
  magento_web:
    image: nguyen0710/magento_apache:v1
    container_name: magento_apache
    ports:
      - "8084:80"                   # Map port host 8084 -> container 80
    depends_on:
      - magento_mariadb
      - magento_opensearch
      - magento_redis
      - magento_rabbitmq
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost/ > /dev/null"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 60s
    command: >
      sh -c " dockerize -wait tcp://magento_mariadb:3306 -wait tcp://magento_opensearch:9200 -wait tcp://magento_redis:6379 -wait tcp://magento_rabbitmq:5672 -timeout 60s && echo '‚úÖ All dependencies are ready. Starting Apache...' && apache2-foreground & sleep 15 && echo 'üîÑ Running bin/magento indexer:reindex...' && php bin/magento indexer:reindex || echo '‚ö†Ô∏è Reindex failed' && echo 'üßπ Flushing cache...' && php bin/magento cache:flush || echo '‚ö†Ô∏è Cache flush failed' && wait " 
    environment:
      - MYSQL_HOST=magento_mariadb
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
      - OPENSEARCH_HOST=magento_opensearch
      - RABBITMQ_HOST=magento_rabbitmq
      - REDIS_HOST=magento_redis
      - MAGENTO_BASE_URL=${MAGENTO_BASE_URL}
    networks:
      - magento_pull_net

  magento_mariadb:
    image: nguyen0710/magento_mariadb_prod:latest
    container_name: magento_mariadb_prod
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    networks:
      - magento_pull_net

  magento_opensearch:
    image: nguyen0710/magento_opensearch:v1
    container_name: magento_opensearch
    restart: always
    environment:
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - OPENSEARCH_JAVA_OPTS=-Xms1g -Xmx1g
      - DISABLE_SECURITY_PLUGIN=true
    ulimits:
      memlock:
        soft: -1
        hard: -1
    networks:
      - magento_pull_net

  magento_redis:
    image: nguyen0710/magento_redis:v1
    container_name: magento_redis
    restart: always
    networks:
      - magento_pull_net

  magento_rabbitmq:
    image: nguyen0710/magento_rabbitmq:v1
    container_name: magento_rabbitmq
    restart: always
    networks:
      - magento_pull_net

networks:
  magento_pull_net:
    driver: bridge